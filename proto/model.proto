syntax = "proto3";
package model;

import "common.proto";

service ModelService {
    rpc ReadModel(ModelId) returns (ModelReadResponse);

    rpc ListModelByName(ModelName) returns (ModelListResponse);

    rpc ListModelByCategory(ModelCategory) returns (ModelListResponse);

    rpc ListModelByNameCategory(ModelNameCategory) returns (ModelListResponse);

    rpc CreateModel(ModelSchema) returns (ModelCreateResponse);

    rpc UpdateModel(ModelUpdate) returns (ModelChangeResponse);

    rpc DeleteModel(ModelId) returns (ModelChangeResponse);

    rpc AddModelType(ModelTypes) returns (ModelChangeResponse);

    rpc RemoveModelType(ModelId) returns (ModelChangeResponse);

    rpc ReadModelConfig(ConfigId) returns (ConfigReadResponse);

    rpc ListModelConfig(ModelId) returns (ConfigListResponse);

    rpc CreateModelConfig(ConfigSchema) returns (ConfigCreateResponse);

    rpc UpdateModelConfig(ConfigUpdate) returns (ConfigChangeResponse);

    rpc DeleteModelConfig(ConfigId) returns (ConfigChangeResponse);
}

message ModelSchema {
    bytes id = 1;
    common.DataIndexing indexing = 2;
    string category = 3;
    string name = 4;
    string description = 5;
    repeated common.DataType types = 6;
    repeated ConfigSchemaVec configs = 7;
}

message ConfigSchemaVec {
    repeated ConfigSchema configs = 1;
}

message ModelId {
    bytes id = 1;
}

message ModelName {
    string name = 1;
}

message ModelCategory {
    string category = 1;
}

message ModelNameCategory {
    string name = 1;
    string category = 2;
}

message ModelUpdate {
    bytes id = 1;
    optional common.DataIndexing indexing = 2;
    optional string category = 3;
    optional string name = 4;
    optional string description = 5;
}

message ModelTypes {
    bytes id = 1;
    repeated common.DataType types = 6;
}

message ConfigSchema {
    int32 id = 1;
    bytes model_id = 2;
    int32 index = 3;
    string name = 4;
    bytes config_bytes = 5;
    common.ConfigType config_type = 6;
    string category = 7;
}

message ConfigId {
    int32 id = 1;
}

message ConfigUpdate {
    int32 id = 1;
    optional string name = 2;
    optional bytes config_bytes = 3;
    optional common.ConfigType config_type = 4;
    optional string category = 5;
}

message ModelReadResponse {
    ModelSchema result = 1;
}

message ModelListResponse {
    repeated ModelSchema results = 1;
}

message ModelCreateResponse {
    bytes id = 1;
}

message ModelChangeResponse {
}

message ConfigReadResponse {
    ConfigSchema result = 1;
}

message ConfigListResponse {
    repeated ConfigSchema results = 1;
}

message ConfigCreateResponse {
    int32 id = 1;
}

message ConfigChangeResponse {
}
