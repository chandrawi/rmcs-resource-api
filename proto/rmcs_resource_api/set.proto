syntax = "proto3";
package set;

service SetService {
    rpc ReadSet(SetId) returns (SetReadResponse);

    rpc ListSetByIds(SetIds) returns (SetListResponse);

    rpc ListSetByTemplate(SetTemplateId) returns (SetListResponse);

    rpc ListSetByName(SetName) returns (SetListResponse);

    rpc ListSetOption(SetOption) returns (SetListResponse);

    rpc CreateSet(SetSchema) returns (SetCreateResponse);

    rpc UpdateSet(SetUpdate) returns (SetChangeResponse);

    rpc DeleteSet(SetId) returns (SetChangeResponse);

    rpc AddSetMember(SetMemberRequest) returns (SetChangeResponse);

    rpc RemoveSetMember(SetMemberRequest) returns (SetChangeResponse);

    rpc SwapSetMember(SetMemberSwap) returns (SetChangeResponse);

    rpc ReadSetTemplate(SetTemplateId) returns (TemplateReadResponse);

    rpc ListSetTemplateByIds(SetTemplateIds) returns (TemplateListResponse);

    rpc ListSetTemplateByName(SetTemplateName) returns (TemplateListResponse);

    rpc ListSetTemplateOption(SetTemplateOption) returns (TemplateListResponse);

    rpc CreateSetTemplate(SetTemplateSchema) returns (TemplateCreateResponse);

    rpc UpdateSetTemplate(SetTemplateUpdate) returns (TemplateChangeResponse);

    rpc DeleteSetTemplate(SetTemplateId) returns (TemplateChangeResponse);

    rpc AddSetTemplateMember(SetTemplateMemberRequest) returns (TemplateChangeResponse);

    rpc RemoveSetTemplateMember(SetTemplateMemberRequest) returns (TemplateChangeResponse);

    rpc SwapSetTemplateMember(SetTemplateMemberSwap) returns (TemplateChangeResponse);
}

message SetSchema {
    bytes id = 1;
    bytes template_id = 2;
    string name = 3;
    string description = 4;
    repeated SetMember members = 5;
}

message SetMember {
    bytes device_id = 1;
    bytes model_id = 2;
    bytes data_index = 3;
}

message SetId {
    bytes id = 1;
}

message SetIds {
    repeated bytes ids = 1;
}

message SetName {
    string name = 1;
}

message SetOption {
    optional bytes template_id = 1;
    optional string name = 2;
}

message SetUpdate {
    bytes id = 1;
    optional bytes template_id = 2;
    optional string name = 3;
    optional string description = 4;
}

message SetMemberRequest {
    bytes set_id = 1;
    bytes device_id = 2;
    bytes model_id = 3;
    bytes data_index = 4;
}

message SetMemberSwap {
    bytes set_id = 1;
    bytes device_id_1 = 2;
    bytes model_id_1 = 3;
    bytes device_id_2 = 4;
    bytes model_id_2 = 5;
}

message SetTemplateSchema {
    bytes id = 1;
    string name = 2;
    string description = 3;
    repeated SetTemplateMember members = 5;
}

message SetTemplateMember {
    bytes type_id = 1;
    bytes model_id = 2;
    bytes data_index = 3;
}

message SetTemplateId {
    bytes id = 1;
}

message SetTemplateIds {
    repeated bytes ids = 1;
}

message SetTemplateName {
    string name = 1;
}

message SetTemplateOption {
    optional string name = 1;
}

message SetTemplateUpdate {
    bytes id = 1;
    optional string name = 2;
    optional string description = 3;
}

message SetTemplateMemberRequest {
    bytes set_id = 1;
    bytes type_id = 2;
    bytes model_id = 3;
    bytes data_index = 4;
    int32 template_index = 5;
}

message SetTemplateMemberSwap {
    bytes set_id = 1;
    int32 template_index_1 = 2;
    int32 template_index_2 = 3;
}

message SetReadResponse {
    SetSchema result = 1;
}

message SetListResponse {
    repeated SetSchema results = 1;
}

message SetCreateResponse {
    bytes id = 1;
}

message SetChangeResponse {
}

message TemplateReadResponse {
    SetTemplateSchema result = 1;
}

message TemplateListResponse {
    repeated SetTemplateSchema results = 1;
}

message TemplateCreateResponse {
    bytes id = 1;
}

message TemplateChangeResponse {
}
