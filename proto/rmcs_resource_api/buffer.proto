syntax = "proto3";
package buffer;

import "rmcs_resource_api/common.proto";

service BufferService {
    rpc ReadBuffer(BufferId) returns (BufferReadResponse);

    rpc ReadBufferByTime(BufferTime) returns (BufferReadResponse);

    rpc ListBufferByLastTime(BufferTime) returns (BufferListResponse);

    rpc ListBufferByRangeTime(BufferRange) returns (BufferListResponse);

    rpc ListBufferByNumberBefore(BufferNumber) returns (BufferListResponse);

    rpc ListBufferByNumberAfter(BufferNumber) returns (BufferListResponse);

    rpc ReadBufferFirst(BufferSelector) returns (BufferReadResponse);

    rpc ReadBufferLast(BufferSelector) returns (BufferReadResponse);

    rpc ListBufferFirst(BuffersSelector) returns (BufferListResponse);

    rpc ListBufferFirstOffset(BuffersSelector) returns (BufferListResponse);

    rpc ListBufferLast(BuffersSelector) returns (BufferListResponse);

    rpc ListBufferLastOffset(BuffersSelector) returns (BufferListResponse);

    rpc ListBufferByIdsTime(BufferIdsTime) returns (BufferListResponse);

    rpc ListBufferByIdsLastTime(BufferIdsTime) returns (BufferListResponse);

    rpc ListBufferByIdsRangeTime(BufferIdsRange) returns (BufferListResponse);

    rpc ListBufferByIdsNumberBefore(BufferIdsNumber) returns (BufferListResponse);

    rpc ListBufferByIdsNumberAfter(BufferIdsNumber) returns (BufferListResponse);

    rpc ListBufferFirstByIds(BuffersIdsSelector) returns (BufferListResponse);

    rpc ListBufferFirstOffsetByIds(BuffersIdsSelector) returns (BufferListResponse);

    rpc ListBufferLastByIds(BuffersIdsSelector) returns (BufferListResponse);

    rpc ListBufferLastOffsetByIds(BuffersIdsSelector) returns (BufferListResponse);

    rpc ListBufferBySetTime(BufferSetTime) returns (BufferListResponse);

    rpc ListBufferBySetLastTime(BufferSetTime) returns (BufferListResponse);

    rpc ListBufferBySetRangeTime(BufferSetRange) returns (BufferListResponse);

    rpc ListBufferBySetNumberBefore(BufferSetNumber) returns (BufferListResponse);

    rpc ListBufferBySetNumberAfter(BufferSetNumber) returns (BufferListResponse);

    rpc ListBufferFirstBySet(BuffersSetSelector) returns (BufferListResponse);

    rpc ListBufferFirstOffsetBySet(BuffersSetSelector) returns (BufferListResponse);

    rpc ListBufferLastBySet(BuffersSetSelector) returns (BufferListResponse);

    rpc ListBufferLastOffsetBySet(BuffersSetSelector) returns (BufferListResponse);

    rpc CreateBuffer(BufferSchema) returns (BufferCreateResponse);

    rpc UpdateBuffer(BufferUpdate) returns (BufferChangeResponse);

    rpc DeleteBuffer(BufferId) returns (BufferChangeResponse);

    rpc ReadBufferTimestampFirst(BufferSelector) returns (TimestampReadResponse);

    rpc ReadBufferTimestampLast(BufferSelector) returns (TimestampReadResponse);

    rpc ListBufferTimestampFirst(BuffersSelector) returns (TimestampListResponse);

    rpc ListBufferTimestampLast(BuffersSelector) returns (TimestampListResponse);

    rpc ListBufferTimestampFirstByIds(BuffersIdsSelector) returns (TimestampListResponse);

    rpc ListBufferTimestampLastByIds(BuffersIdsSelector) returns (TimestampListResponse);

    rpc ListBufferTimestampFirstBySet(BuffersSetSelector) returns (TimestampListResponse);

    rpc ListBufferTimestampLastBySet(BuffersSetSelector) returns (TimestampListResponse);

    rpc CountBuffer(BufferCount) returns (BufferCountResponse);
}

message BufferSchema {
    int32 id = 1;
    bytes device_id = 2;
    bytes model_id = 3;
    int64 timestamp = 4;
    bytes data_bytes = 5;
    repeated common.DataType data_type = 6;
    int32 status = 7;
}

message BufferId {
    int32 id = 1;
}

message BufferTime {
    bytes device_id = 1;
    bytes model_id = 2;
    int64 timestamp = 3;
    optional int32 status = 4;
}

message BufferRange {
    bytes device_id = 1;
    bytes model_id = 2;
    int64 begin = 3;
    int64 end = 4;
    optional int32 status = 5;
}

message BufferNumber {
    bytes device_id = 1;
    bytes model_id = 2;
    int64 timestamp = 3;
    uint32 number = 4;
    optional int32 status = 5;
}

message BufferSelector {
    optional bytes device_id = 1;
    optional bytes model_id = 2;
    optional int32 status = 3;
}

message BuffersSelector {
    optional bytes device_id = 1;
    optional bytes model_id = 2;
    optional int32 status = 3;
    uint32 number = 4;
    uint32 offset = 5;
}

message BufferIdsTime {
    repeated bytes device_ids = 1;
    repeated bytes model_ids = 2;
    int64 timestamp = 3;
    optional int32 status = 4;
}

message BufferIdsRange {
    repeated bytes device_ids = 1;
    repeated bytes model_ids = 2;
    int64 begin = 3;
    int64 end = 4;
    optional int32 status = 5;
}

message BufferIdsNumber {
    repeated bytes device_ids = 1;
    repeated bytes model_ids = 2;
    int64 timestamp = 3;
    uint32 number = 4;
    optional int32 status = 5;
}

message BuffersIdsSelector {
    repeated bytes device_ids = 1;
    repeated bytes model_ids = 2;
    optional int32 status = 3;
    uint32 number = 4;
    uint32 offset = 5;
}

message BufferSetTime {
    bytes set_id = 1;
    int64 timestamp = 2;
    optional int32 status = 3;
}

message BufferSetRange {
    bytes set_id = 1;
    int64 begin = 2;
    int64 end = 3;
    optional int32 status = 4;
}

message BufferSetNumber {
    bytes set_id = 1;
    int64 timestamp = 2;
    uint32 number = 3;
    optional int32 status = 4;
}

message BuffersSetSelector {
    bytes set_id = 1;
    optional int32 status = 2;
    uint32 number = 3;
    uint32 offset = 4;
}

message BufferUpdate {
    int32 id = 1;
    optional bytes data_bytes = 2;
    repeated common.DataType data_type = 3;
    optional int32 status = 4;
}

message BufferCount {
    optional bytes device_id = 1;
    optional bytes model_id = 2;
    optional int32 status = 3;
}

message BufferReadResponse {
    BufferSchema result = 1;
}

message BufferListResponse {
    repeated BufferSchema results = 1;
}

message BufferCreateResponse {
    int32 id = 1;
}

message BufferChangeResponse {
}

message TimestampReadResponse {
    int64 timestamp = 1;
}

message TimestampListResponse {
    repeated int64 timestamps = 1;
}

message BufferCountResponse {
    uint32 count = 1;
}
