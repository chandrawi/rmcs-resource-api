/**
 * @fileoverview gRPC-Web generated client stub for data
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.26.1
// source: rmcs_resource_api/data.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var rmcs_resource_api_common_pb = require('../rmcs_resource_api/common_pb.js')
const proto = {};
proto.data = require('./data_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.data.DataServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.data.DataServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.DataId,
 *   !proto.data.DataReadResponse>}
 */
const methodDescriptor_DataService_ReadData = new grpc.web.MethodDescriptor(
  '/data.DataService/ReadData',
  grpc.web.MethodType.UNARY,
  proto.data.DataId,
  proto.data.DataReadResponse,
  /**
   * @param {!proto.data.DataId} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataReadResponse.deserializeBinary
);


/**
 * @param {!proto.data.DataId} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataReadResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataReadResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.readData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/ReadData',
      request,
      metadata || {},
      methodDescriptor_DataService_ReadData,
      callback);
};


/**
 * @param {!proto.data.DataId} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataReadResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.readData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/ReadData',
      request,
      metadata || {},
      methodDescriptor_DataService_ReadData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.DataTime,
 *   !proto.data.DataListResponse>}
 */
const methodDescriptor_DataService_ListDataByTime = new grpc.web.MethodDescriptor(
  '/data.DataService/ListDataByTime',
  grpc.web.MethodType.UNARY,
  proto.data.DataTime,
  proto.data.DataListResponse,
  /**
   * @param {!proto.data.DataTime} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataListResponse.deserializeBinary
);


/**
 * @param {!proto.data.DataTime} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.listDataByTime =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/ListDataByTime',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataByTime,
      callback);
};


/**
 * @param {!proto.data.DataTime} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataListResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.listDataByTime =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/ListDataByTime',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataByTime);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.DataTime,
 *   !proto.data.DataListResponse>}
 */
const methodDescriptor_DataService_ListDataByLastTime = new grpc.web.MethodDescriptor(
  '/data.DataService/ListDataByLastTime',
  grpc.web.MethodType.UNARY,
  proto.data.DataTime,
  proto.data.DataListResponse,
  /**
   * @param {!proto.data.DataTime} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataListResponse.deserializeBinary
);


/**
 * @param {!proto.data.DataTime} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.listDataByLastTime =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/ListDataByLastTime',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataByLastTime,
      callback);
};


/**
 * @param {!proto.data.DataTime} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataListResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.listDataByLastTime =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/ListDataByLastTime',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataByLastTime);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.DataRange,
 *   !proto.data.DataListResponse>}
 */
const methodDescriptor_DataService_ListDataByRangeTime = new grpc.web.MethodDescriptor(
  '/data.DataService/ListDataByRangeTime',
  grpc.web.MethodType.UNARY,
  proto.data.DataRange,
  proto.data.DataListResponse,
  /**
   * @param {!proto.data.DataRange} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataListResponse.deserializeBinary
);


/**
 * @param {!proto.data.DataRange} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.listDataByRangeTime =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/ListDataByRangeTime',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataByRangeTime,
      callback);
};


/**
 * @param {!proto.data.DataRange} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataListResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.listDataByRangeTime =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/ListDataByRangeTime',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataByRangeTime);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.DataNumber,
 *   !proto.data.DataListResponse>}
 */
const methodDescriptor_DataService_ListDataByNumberBefore = new grpc.web.MethodDescriptor(
  '/data.DataService/ListDataByNumberBefore',
  grpc.web.MethodType.UNARY,
  proto.data.DataNumber,
  proto.data.DataListResponse,
  /**
   * @param {!proto.data.DataNumber} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataListResponse.deserializeBinary
);


/**
 * @param {!proto.data.DataNumber} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.listDataByNumberBefore =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/ListDataByNumberBefore',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataByNumberBefore,
      callback);
};


/**
 * @param {!proto.data.DataNumber} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataListResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.listDataByNumberBefore =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/ListDataByNumberBefore',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataByNumberBefore);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.DataNumber,
 *   !proto.data.DataListResponse>}
 */
const methodDescriptor_DataService_ListDataByNumberAfter = new grpc.web.MethodDescriptor(
  '/data.DataService/ListDataByNumberAfter',
  grpc.web.MethodType.UNARY,
  proto.data.DataNumber,
  proto.data.DataListResponse,
  /**
   * @param {!proto.data.DataNumber} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataListResponse.deserializeBinary
);


/**
 * @param {!proto.data.DataNumber} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.listDataByNumberAfter =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/ListDataByNumberAfter',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataByNumberAfter,
      callback);
};


/**
 * @param {!proto.data.DataNumber} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataListResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.listDataByNumberAfter =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/ListDataByNumberAfter',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataByNumberAfter);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.ModelId,
 *   !proto.data.DataModelResponse>}
 */
const methodDescriptor_DataService_GetDataModel = new grpc.web.MethodDescriptor(
  '/data.DataService/GetDataModel',
  grpc.web.MethodType.UNARY,
  proto.data.ModelId,
  proto.data.DataModelResponse,
  /**
   * @param {!proto.data.ModelId} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataModelResponse.deserializeBinary
);


/**
 * @param {!proto.data.ModelId} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataModelResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataModelResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.getDataModel =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/GetDataModel',
      request,
      metadata || {},
      methodDescriptor_DataService_GetDataModel,
      callback);
};


/**
 * @param {!proto.data.ModelId} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataModelResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.getDataModel =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/GetDataModel',
      request,
      metadata || {},
      methodDescriptor_DataService_GetDataModel);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.DataIdModel,
 *   !proto.data.DataReadResponse>}
 */
const methodDescriptor_DataService_ReadDataWithModel = new grpc.web.MethodDescriptor(
  '/data.DataService/ReadDataWithModel',
  grpc.web.MethodType.UNARY,
  proto.data.DataIdModel,
  proto.data.DataReadResponse,
  /**
   * @param {!proto.data.DataIdModel} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataReadResponse.deserializeBinary
);


/**
 * @param {!proto.data.DataIdModel} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataReadResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataReadResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.readDataWithModel =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/ReadDataWithModel',
      request,
      metadata || {},
      methodDescriptor_DataService_ReadDataWithModel,
      callback);
};


/**
 * @param {!proto.data.DataIdModel} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataReadResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.readDataWithModel =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/ReadDataWithModel',
      request,
      metadata || {},
      methodDescriptor_DataService_ReadDataWithModel);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.DataTimeModel,
 *   !proto.data.DataListResponse>}
 */
const methodDescriptor_DataService_ListDataWithModelByTime = new grpc.web.MethodDescriptor(
  '/data.DataService/ListDataWithModelByTime',
  grpc.web.MethodType.UNARY,
  proto.data.DataTimeModel,
  proto.data.DataListResponse,
  /**
   * @param {!proto.data.DataTimeModel} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataListResponse.deserializeBinary
);


/**
 * @param {!proto.data.DataTimeModel} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.listDataWithModelByTime =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/ListDataWithModelByTime',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataWithModelByTime,
      callback);
};


/**
 * @param {!proto.data.DataTimeModel} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataListResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.listDataWithModelByTime =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/ListDataWithModelByTime',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataWithModelByTime);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.DataTimeModel,
 *   !proto.data.DataListResponse>}
 */
const methodDescriptor_DataService_ListDataWithModelByLastTime = new grpc.web.MethodDescriptor(
  '/data.DataService/ListDataWithModelByLastTime',
  grpc.web.MethodType.UNARY,
  proto.data.DataTimeModel,
  proto.data.DataListResponse,
  /**
   * @param {!proto.data.DataTimeModel} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataListResponse.deserializeBinary
);


/**
 * @param {!proto.data.DataTimeModel} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.listDataWithModelByLastTime =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/ListDataWithModelByLastTime',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataWithModelByLastTime,
      callback);
};


/**
 * @param {!proto.data.DataTimeModel} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataListResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.listDataWithModelByLastTime =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/ListDataWithModelByLastTime',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataWithModelByLastTime);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.DataRangeModel,
 *   !proto.data.DataListResponse>}
 */
const methodDescriptor_DataService_ListDataWithModelByRangeTime = new grpc.web.MethodDescriptor(
  '/data.DataService/ListDataWithModelByRangeTime',
  grpc.web.MethodType.UNARY,
  proto.data.DataRangeModel,
  proto.data.DataListResponse,
  /**
   * @param {!proto.data.DataRangeModel} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataListResponse.deserializeBinary
);


/**
 * @param {!proto.data.DataRangeModel} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.listDataWithModelByRangeTime =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/ListDataWithModelByRangeTime',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataWithModelByRangeTime,
      callback);
};


/**
 * @param {!proto.data.DataRangeModel} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataListResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.listDataWithModelByRangeTime =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/ListDataWithModelByRangeTime',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataWithModelByRangeTime);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.DataNumberModel,
 *   !proto.data.DataListResponse>}
 */
const methodDescriptor_DataService_ListDataWithModelByNumberBefore = new grpc.web.MethodDescriptor(
  '/data.DataService/ListDataWithModelByNumberBefore',
  grpc.web.MethodType.UNARY,
  proto.data.DataNumberModel,
  proto.data.DataListResponse,
  /**
   * @param {!proto.data.DataNumberModel} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataListResponse.deserializeBinary
);


/**
 * @param {!proto.data.DataNumberModel} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.listDataWithModelByNumberBefore =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/ListDataWithModelByNumberBefore',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataWithModelByNumberBefore,
      callback);
};


/**
 * @param {!proto.data.DataNumberModel} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataListResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.listDataWithModelByNumberBefore =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/ListDataWithModelByNumberBefore',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataWithModelByNumberBefore);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.DataNumberModel,
 *   !proto.data.DataListResponse>}
 */
const methodDescriptor_DataService_ListDataWithModelByNumberAfter = new grpc.web.MethodDescriptor(
  '/data.DataService/ListDataWithModelByNumberAfter',
  grpc.web.MethodType.UNARY,
  proto.data.DataNumberModel,
  proto.data.DataListResponse,
  /**
   * @param {!proto.data.DataNumberModel} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataListResponse.deserializeBinary
);


/**
 * @param {!proto.data.DataNumberModel} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.listDataWithModelByNumberAfter =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/ListDataWithModelByNumberAfter',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataWithModelByNumberAfter,
      callback);
};


/**
 * @param {!proto.data.DataNumberModel} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataListResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.listDataWithModelByNumberAfter =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/ListDataWithModelByNumberAfter',
      request,
      metadata || {},
      methodDescriptor_DataService_ListDataWithModelByNumberAfter);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.DataSchema,
 *   !proto.data.DataChangeResponse>}
 */
const methodDescriptor_DataService_CreateData = new grpc.web.MethodDescriptor(
  '/data.DataService/CreateData',
  grpc.web.MethodType.UNARY,
  proto.data.DataSchema,
  proto.data.DataChangeResponse,
  /**
   * @param {!proto.data.DataSchema} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataChangeResponse.deserializeBinary
);


/**
 * @param {!proto.data.DataSchema} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataChangeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataChangeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.createData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/CreateData',
      request,
      metadata || {},
      methodDescriptor_DataService_CreateData,
      callback);
};


/**
 * @param {!proto.data.DataSchema} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataChangeResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.createData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/CreateData',
      request,
      metadata || {},
      methodDescriptor_DataService_CreateData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.DataSchemaModel,
 *   !proto.data.DataChangeResponse>}
 */
const methodDescriptor_DataService_CreateDataWithModel = new grpc.web.MethodDescriptor(
  '/data.DataService/CreateDataWithModel',
  grpc.web.MethodType.UNARY,
  proto.data.DataSchemaModel,
  proto.data.DataChangeResponse,
  /**
   * @param {!proto.data.DataSchemaModel} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataChangeResponse.deserializeBinary
);


/**
 * @param {!proto.data.DataSchemaModel} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataChangeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataChangeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.createDataWithModel =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/CreateDataWithModel',
      request,
      metadata || {},
      methodDescriptor_DataService_CreateDataWithModel,
      callback);
};


/**
 * @param {!proto.data.DataSchemaModel} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataChangeResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.createDataWithModel =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/CreateDataWithModel',
      request,
      metadata || {},
      methodDescriptor_DataService_CreateDataWithModel);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.DataId,
 *   !proto.data.DataChangeResponse>}
 */
const methodDescriptor_DataService_DeleteData = new grpc.web.MethodDescriptor(
  '/data.DataService/DeleteData',
  grpc.web.MethodType.UNARY,
  proto.data.DataId,
  proto.data.DataChangeResponse,
  /**
   * @param {!proto.data.DataId} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataChangeResponse.deserializeBinary
);


/**
 * @param {!proto.data.DataId} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataChangeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataChangeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.deleteData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/DeleteData',
      request,
      metadata || {},
      methodDescriptor_DataService_DeleteData,
      callback);
};


/**
 * @param {!proto.data.DataId} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataChangeResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.deleteData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/DeleteData',
      request,
      metadata || {},
      methodDescriptor_DataService_DeleteData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.data.DataIdModel,
 *   !proto.data.DataChangeResponse>}
 */
const methodDescriptor_DataService_DeleteDataWithModel = new grpc.web.MethodDescriptor(
  '/data.DataService/DeleteDataWithModel',
  grpc.web.MethodType.UNARY,
  proto.data.DataIdModel,
  proto.data.DataChangeResponse,
  /**
   * @param {!proto.data.DataIdModel} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.data.DataChangeResponse.deserializeBinary
);


/**
 * @param {!proto.data.DataIdModel} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.data.DataChangeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.data.DataChangeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.data.DataServiceClient.prototype.deleteDataWithModel =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/data.DataService/DeleteDataWithModel',
      request,
      metadata || {},
      methodDescriptor_DataService_DeleteDataWithModel,
      callback);
};


/**
 * @param {!proto.data.DataIdModel} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.data.DataChangeResponse>}
 *     Promise that resolves to the response
 */
proto.data.DataServicePromiseClient.prototype.deleteDataWithModel =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/data.DataService/DeleteDataWithModel',
      request,
      metadata || {},
      methodDescriptor_DataService_DeleteDataWithModel);
};


module.exports = proto.data;

