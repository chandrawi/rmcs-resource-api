/**
 * @fileoverview gRPC-Web generated client stub for buffer
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.27.3
// source: rmcs_resource_api/buffer.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var rmcs_resource_api_common_pb = require('../rmcs_resource_api/common_pb.js')
const proto = {};
proto.buffer = require('./buffer_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.buffer.BufferServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.buffer.BufferServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferId,
 *   !proto.buffer.BufferReadResponse>}
 */
const methodDescriptor_BufferService_ReadBuffer = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ReadBuffer',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferId,
  proto.buffer.BufferReadResponse,
  /**
   * @param {!proto.buffer.BufferId} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferReadResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferId} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferReadResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferReadResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.readBuffer =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ReadBuffer',
      request,
      metadata || {},
      methodDescriptor_BufferService_ReadBuffer,
      callback);
};


/**
 * @param {!proto.buffer.BufferId} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferReadResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.readBuffer =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ReadBuffer',
      request,
      metadata || {},
      methodDescriptor_BufferService_ReadBuffer);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferTime,
 *   !proto.buffer.BufferReadResponse>}
 */
const methodDescriptor_BufferService_ReadBufferByTime = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ReadBufferByTime',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferTime,
  proto.buffer.BufferReadResponse,
  /**
   * @param {!proto.buffer.BufferTime} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferReadResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferTime} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferReadResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferReadResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.readBufferByTime =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ReadBufferByTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ReadBufferByTime,
      callback);
};


/**
 * @param {!proto.buffer.BufferTime} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferReadResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.readBufferByTime =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ReadBufferByTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ReadBufferByTime);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferTime,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferByLastTime = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferByLastTime',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferTime,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BufferTime} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferTime} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferByLastTime =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByLastTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByLastTime,
      callback);
};


/**
 * @param {!proto.buffer.BufferTime} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferByLastTime =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByLastTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByLastTime);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferRange,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferByRangeTime = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferByRangeTime',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferRange,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BufferRange} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferRange} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferByRangeTime =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByRangeTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByRangeTime,
      callback);
};


/**
 * @param {!proto.buffer.BufferRange} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferByRangeTime =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByRangeTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByRangeTime);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferNumber,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferByNumberBefore = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferByNumberBefore',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferNumber,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BufferNumber} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferNumber} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferByNumberBefore =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByNumberBefore',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByNumberBefore,
      callback);
};


/**
 * @param {!proto.buffer.BufferNumber} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferByNumberBefore =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByNumberBefore',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByNumberBefore);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferNumber,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferByNumberAfter = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferByNumberAfter',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferNumber,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BufferNumber} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferNumber} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferByNumberAfter =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByNumberAfter',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByNumberAfter,
      callback);
};


/**
 * @param {!proto.buffer.BufferNumber} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferByNumberAfter =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByNumberAfter',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByNumberAfter);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferSelector,
 *   !proto.buffer.BufferReadResponse>}
 */
const methodDescriptor_BufferService_ReadBufferFirst = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ReadBufferFirst',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferSelector,
  proto.buffer.BufferReadResponse,
  /**
   * @param {!proto.buffer.BufferSelector} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferReadResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferSelector} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferReadResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferReadResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.readBufferFirst =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ReadBufferFirst',
      request,
      metadata || {},
      methodDescriptor_BufferService_ReadBufferFirst,
      callback);
};


/**
 * @param {!proto.buffer.BufferSelector} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferReadResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.readBufferFirst =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ReadBufferFirst',
      request,
      metadata || {},
      methodDescriptor_BufferService_ReadBufferFirst);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferSelector,
 *   !proto.buffer.BufferReadResponse>}
 */
const methodDescriptor_BufferService_ReadBufferLast = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ReadBufferLast',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferSelector,
  proto.buffer.BufferReadResponse,
  /**
   * @param {!proto.buffer.BufferSelector} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferReadResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferSelector} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferReadResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferReadResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.readBufferLast =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ReadBufferLast',
      request,
      metadata || {},
      methodDescriptor_BufferService_ReadBufferLast,
      callback);
};


/**
 * @param {!proto.buffer.BufferSelector} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferReadResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.readBufferLast =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ReadBufferLast',
      request,
      metadata || {},
      methodDescriptor_BufferService_ReadBufferLast);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BuffersSelector,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferFirst = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferFirst',
  grpc.web.MethodType.UNARY,
  proto.buffer.BuffersSelector,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BuffersSelector} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BuffersSelector} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferFirst =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferFirst',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferFirst,
      callback);
};


/**
 * @param {!proto.buffer.BuffersSelector} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferFirst =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferFirst',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferFirst);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BuffersSelector,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferFirstOffset = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferFirstOffset',
  grpc.web.MethodType.UNARY,
  proto.buffer.BuffersSelector,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BuffersSelector} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BuffersSelector} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferFirstOffset =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferFirstOffset',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferFirstOffset,
      callback);
};


/**
 * @param {!proto.buffer.BuffersSelector} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferFirstOffset =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferFirstOffset',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferFirstOffset);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BuffersSelector,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferLast = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferLast',
  grpc.web.MethodType.UNARY,
  proto.buffer.BuffersSelector,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BuffersSelector} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BuffersSelector} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferLast =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferLast',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferLast,
      callback);
};


/**
 * @param {!proto.buffer.BuffersSelector} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferLast =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferLast',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferLast);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BuffersSelector,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferLastOffset = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferLastOffset',
  grpc.web.MethodType.UNARY,
  proto.buffer.BuffersSelector,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BuffersSelector} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BuffersSelector} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferLastOffset =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferLastOffset',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferLastOffset,
      callback);
};


/**
 * @param {!proto.buffer.BuffersSelector} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferLastOffset =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferLastOffset',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferLastOffset);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferIdsTime,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferByIdsTime = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferByIdsTime',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferIdsTime,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BufferIdsTime} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferIdsTime} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferByIdsTime =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByIdsTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByIdsTime,
      callback);
};


/**
 * @param {!proto.buffer.BufferIdsTime} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferByIdsTime =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByIdsTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByIdsTime);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferIdsTime,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferByIdsLastTime = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferByIdsLastTime',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferIdsTime,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BufferIdsTime} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferIdsTime} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferByIdsLastTime =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByIdsLastTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByIdsLastTime,
      callback);
};


/**
 * @param {!proto.buffer.BufferIdsTime} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferByIdsLastTime =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByIdsLastTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByIdsLastTime);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferIdsRange,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferByIdsRangeTime = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferByIdsRangeTime',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferIdsRange,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BufferIdsRange} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferIdsRange} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferByIdsRangeTime =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByIdsRangeTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByIdsRangeTime,
      callback);
};


/**
 * @param {!proto.buffer.BufferIdsRange} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferByIdsRangeTime =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByIdsRangeTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByIdsRangeTime);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferIdsNumber,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferByIdsNumberBefore = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferByIdsNumberBefore',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferIdsNumber,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BufferIdsNumber} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferIdsNumber} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferByIdsNumberBefore =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByIdsNumberBefore',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByIdsNumberBefore,
      callback);
};


/**
 * @param {!proto.buffer.BufferIdsNumber} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferByIdsNumberBefore =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByIdsNumberBefore',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByIdsNumberBefore);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferIdsNumber,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferByIdsNumberAfter = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferByIdsNumberAfter',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferIdsNumber,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BufferIdsNumber} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferIdsNumber} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferByIdsNumberAfter =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByIdsNumberAfter',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByIdsNumberAfter,
      callback);
};


/**
 * @param {!proto.buffer.BufferIdsNumber} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferByIdsNumberAfter =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferByIdsNumberAfter',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferByIdsNumberAfter);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BuffersIdsSelector,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferFirstByIds = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferFirstByIds',
  grpc.web.MethodType.UNARY,
  proto.buffer.BuffersIdsSelector,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BuffersIdsSelector} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BuffersIdsSelector} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferFirstByIds =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferFirstByIds',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferFirstByIds,
      callback);
};


/**
 * @param {!proto.buffer.BuffersIdsSelector} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferFirstByIds =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferFirstByIds',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferFirstByIds);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BuffersIdsSelector,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferFirstOffsetByIds = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferFirstOffsetByIds',
  grpc.web.MethodType.UNARY,
  proto.buffer.BuffersIdsSelector,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BuffersIdsSelector} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BuffersIdsSelector} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferFirstOffsetByIds =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferFirstOffsetByIds',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferFirstOffsetByIds,
      callback);
};


/**
 * @param {!proto.buffer.BuffersIdsSelector} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferFirstOffsetByIds =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferFirstOffsetByIds',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferFirstOffsetByIds);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BuffersIdsSelector,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferLastByIds = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferLastByIds',
  grpc.web.MethodType.UNARY,
  proto.buffer.BuffersIdsSelector,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BuffersIdsSelector} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BuffersIdsSelector} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferLastByIds =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferLastByIds',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferLastByIds,
      callback);
};


/**
 * @param {!proto.buffer.BuffersIdsSelector} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferLastByIds =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferLastByIds',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferLastByIds);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BuffersIdsSelector,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferLastOffsetByIds = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferLastOffsetByIds',
  grpc.web.MethodType.UNARY,
  proto.buffer.BuffersIdsSelector,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BuffersIdsSelector} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BuffersIdsSelector} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferLastOffsetByIds =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferLastOffsetByIds',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferLastOffsetByIds,
      callback);
};


/**
 * @param {!proto.buffer.BuffersIdsSelector} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferLastOffsetByIds =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferLastOffsetByIds',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferLastOffsetByIds);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferSetTime,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferBySetTime = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferBySetTime',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferSetTime,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BufferSetTime} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferSetTime} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferBySetTime =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferBySetTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferBySetTime,
      callback);
};


/**
 * @param {!proto.buffer.BufferSetTime} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferBySetTime =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferBySetTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferBySetTime);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferSetTime,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferBySetLastTime = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferBySetLastTime',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferSetTime,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BufferSetTime} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferSetTime} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferBySetLastTime =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferBySetLastTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferBySetLastTime,
      callback);
};


/**
 * @param {!proto.buffer.BufferSetTime} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferBySetLastTime =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferBySetLastTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferBySetLastTime);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferSetRange,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferBySetRangeTime = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferBySetRangeTime',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferSetRange,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BufferSetRange} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferSetRange} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferBySetRangeTime =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferBySetRangeTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferBySetRangeTime,
      callback);
};


/**
 * @param {!proto.buffer.BufferSetRange} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferBySetRangeTime =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferBySetRangeTime',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferBySetRangeTime);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferSetNumber,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferBySetNumberBefore = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferBySetNumberBefore',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferSetNumber,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BufferSetNumber} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferSetNumber} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferBySetNumberBefore =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferBySetNumberBefore',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferBySetNumberBefore,
      callback);
};


/**
 * @param {!proto.buffer.BufferSetNumber} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferBySetNumberBefore =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferBySetNumberBefore',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferBySetNumberBefore);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferSetNumber,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferBySetNumberAfter = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferBySetNumberAfter',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferSetNumber,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BufferSetNumber} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferSetNumber} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferBySetNumberAfter =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferBySetNumberAfter',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferBySetNumberAfter,
      callback);
};


/**
 * @param {!proto.buffer.BufferSetNumber} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferBySetNumberAfter =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferBySetNumberAfter',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferBySetNumberAfter);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BuffersSetSelector,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferFirstBySet = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferFirstBySet',
  grpc.web.MethodType.UNARY,
  proto.buffer.BuffersSetSelector,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BuffersSetSelector} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BuffersSetSelector} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferFirstBySet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferFirstBySet',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferFirstBySet,
      callback);
};


/**
 * @param {!proto.buffer.BuffersSetSelector} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferFirstBySet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferFirstBySet',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferFirstBySet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BuffersSetSelector,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferFirstOffsetBySet = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferFirstOffsetBySet',
  grpc.web.MethodType.UNARY,
  proto.buffer.BuffersSetSelector,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BuffersSetSelector} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BuffersSetSelector} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferFirstOffsetBySet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferFirstOffsetBySet',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferFirstOffsetBySet,
      callback);
};


/**
 * @param {!proto.buffer.BuffersSetSelector} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferFirstOffsetBySet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferFirstOffsetBySet',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferFirstOffsetBySet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BuffersSetSelector,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferLastBySet = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferLastBySet',
  grpc.web.MethodType.UNARY,
  proto.buffer.BuffersSetSelector,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BuffersSetSelector} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BuffersSetSelector} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferLastBySet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferLastBySet',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferLastBySet,
      callback);
};


/**
 * @param {!proto.buffer.BuffersSetSelector} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferLastBySet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferLastBySet',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferLastBySet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BuffersSetSelector,
 *   !proto.buffer.BufferListResponse>}
 */
const methodDescriptor_BufferService_ListBufferLastOffsetBySet = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/ListBufferLastOffsetBySet',
  grpc.web.MethodType.UNARY,
  proto.buffer.BuffersSetSelector,
  proto.buffer.BufferListResponse,
  /**
   * @param {!proto.buffer.BuffersSetSelector} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferListResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BuffersSetSelector} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.listBufferLastOffsetBySet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/ListBufferLastOffsetBySet',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferLastOffsetBySet,
      callback);
};


/**
 * @param {!proto.buffer.BuffersSetSelector} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferListResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.listBufferLastOffsetBySet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/ListBufferLastOffsetBySet',
      request,
      metadata || {},
      methodDescriptor_BufferService_ListBufferLastOffsetBySet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferSchema,
 *   !proto.buffer.BufferCreateResponse>}
 */
const methodDescriptor_BufferService_CreateBuffer = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/CreateBuffer',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferSchema,
  proto.buffer.BufferCreateResponse,
  /**
   * @param {!proto.buffer.BufferSchema} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferCreateResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferSchema} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferCreateResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferCreateResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.createBuffer =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/CreateBuffer',
      request,
      metadata || {},
      methodDescriptor_BufferService_CreateBuffer,
      callback);
};


/**
 * @param {!proto.buffer.BufferSchema} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferCreateResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.createBuffer =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/CreateBuffer',
      request,
      metadata || {},
      methodDescriptor_BufferService_CreateBuffer);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferUpdate,
 *   !proto.buffer.BufferChangeResponse>}
 */
const methodDescriptor_BufferService_UpdateBuffer = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/UpdateBuffer',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferUpdate,
  proto.buffer.BufferChangeResponse,
  /**
   * @param {!proto.buffer.BufferUpdate} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferChangeResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferUpdate} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferChangeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferChangeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.updateBuffer =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/UpdateBuffer',
      request,
      metadata || {},
      methodDescriptor_BufferService_UpdateBuffer,
      callback);
};


/**
 * @param {!proto.buffer.BufferUpdate} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferChangeResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.updateBuffer =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/UpdateBuffer',
      request,
      metadata || {},
      methodDescriptor_BufferService_UpdateBuffer);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferId,
 *   !proto.buffer.BufferChangeResponse>}
 */
const methodDescriptor_BufferService_DeleteBuffer = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/DeleteBuffer',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferId,
  proto.buffer.BufferChangeResponse,
  /**
   * @param {!proto.buffer.BufferId} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferChangeResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferId} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferChangeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferChangeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.deleteBuffer =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/DeleteBuffer',
      request,
      metadata || {},
      methodDescriptor_BufferService_DeleteBuffer,
      callback);
};


/**
 * @param {!proto.buffer.BufferId} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferChangeResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.deleteBuffer =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/DeleteBuffer',
      request,
      metadata || {},
      methodDescriptor_BufferService_DeleteBuffer);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buffer.BufferCount,
 *   !proto.buffer.BufferCountResponse>}
 */
const methodDescriptor_BufferService_CountBuffer = new grpc.web.MethodDescriptor(
  '/buffer.BufferService/CountBuffer',
  grpc.web.MethodType.UNARY,
  proto.buffer.BufferCount,
  proto.buffer.BufferCountResponse,
  /**
   * @param {!proto.buffer.BufferCount} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buffer.BufferCountResponse.deserializeBinary
);


/**
 * @param {!proto.buffer.BufferCount} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buffer.BufferCountResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buffer.BufferCountResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buffer.BufferServiceClient.prototype.countBuffer =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buffer.BufferService/CountBuffer',
      request,
      metadata || {},
      methodDescriptor_BufferService_CountBuffer,
      callback);
};


/**
 * @param {!proto.buffer.BufferCount} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buffer.BufferCountResponse>}
 *     Promise that resolves to the response
 */
proto.buffer.BufferServicePromiseClient.prototype.countBuffer =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buffer.BufferService/CountBuffer',
      request,
      metadata || {},
      methodDescriptor_BufferService_CountBuffer);
};


module.exports = proto.buffer;

